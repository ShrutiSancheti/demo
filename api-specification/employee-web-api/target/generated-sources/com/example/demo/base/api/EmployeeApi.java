/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.demo.base.api;

import com.example.demo.base.api.model.Employee;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Api(value = "Employee", description = "the Employee API")
public interface EmployeeApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /add/employee : Add a new employee.
     *
     * @param employee A JSON object containing pet information (required)
     * @return Created (status code 201)
     */
    @ApiOperation(value = "Add a new employee.", nickname = "addEmployee", notes = "", tags={ "Employee", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created") })
    @PostMapping(
        value = "/add/employee",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> addEmployee(@ApiParam(value = "A JSON object containing pet information" ,required=true )  @Valid @RequestBody Employee employee) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /delete/{employeeId} : delete employee.
     *
     * @param employeeId Employee id to delete (required)
     * @return delete (status code 200)
     */
    @ApiOperation(value = "delete employee.", nickname = "deleteEmployee", notes = "", tags={ "Employee", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "delete") })
    @DeleteMapping(
        value = "/delete/{employeeId}"
    )
    default ResponseEntity<Void> deleteEmployee(@ApiParam(value = "Employee id to delete",required=true) @PathVariable("employeeId") Integer employeeId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /put/employee : Edit employee.
     *
     * @param employee A JSON object containing pet information (required)
     * @return Edited (status code 201)
     */
    @ApiOperation(value = "Edit employee.", nickname = "editEmployee", notes = "", tags={ "Employee", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Edited") })
    @PutMapping(
        value = "/put/employee",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> editEmployee(@ApiParam(value = "A JSON object containing pet information" ,required=true )  @Valid @RequestBody Employee employee) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /get/employees : Get all students.
     * This is a Student service description
     *
     * @return This means its ok. (status code 200)
     */
    @ApiOperation(value = "Get all students.", nickname = "getAllEmployee", notes = "This is a Student service description", response = Employee.class, responseContainer = "List", tags={ "Employee", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "This means its ok.", response = Employee.class, responseContainer = "List") })
    @GetMapping(
        value = "/get/employees",
        produces = { "application/json" }
    )
    default ResponseEntity<List<Employee>> getAllEmployee() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"name\" : \"name\", \"id\" : 0, \"salary\" : 6 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
